spring:
  application:
    name: itbms-backend
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  datasource:
    url: ${DB_URL:jdbc:mysql://localhost:3306/ms3_itbms_db}
    username: ${DB_USER:root}
    password: ${DB_PASSWORD:rootpass}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.yaml
    enabled: true
  data:
    mongodb:
      host: ${MONGO_HOST:localhost}
      port: ${MONGO_PORT:27017}
      database: ${MONGO_DB:ms3_itbms_db}
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  cache:
    type: redis
    redis:
      time-to-live: 600000
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USER:itbmshop359@gmail.com}
    password: ${MAIL_PASSWORD:hxjhjwvjpczmasfd}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  ai:
    chat:
      client:
        enabled: false
    openai:
      api-key: ${OPENAI_API_KEY:your-openai-api-key}
      chat:
        options:
          model: gpt-4o-mini
    ollama:
      base-url: ${OLLAMA_BASE_URL:http://localhost:11434}
      chat:
        options:
          model: llama3

server:
  port: 8080
  servlet:
    context-path: /itb-mshop
  error:
    include-stacktrace: on_param

app:
  frontend:
    url: ${FRONTEND_URL:http://localhost:5173}

team:
  code: ms3

# File Config
file:
  upload-dir: upload_images
  max-size: 2MB
  allowed-types: image/jpeg,image/png,image/webp

# MinIO
minio:
  endpoint: ${MINIO_ENDPOINT:http://localhost:9000}
  access-key: ${MINIO_ACCESS_KEY:root}
  secret-key: ${MINIO_SECRET_KEY:rootpass}
  bucket-name: ${MINIO_BUCKET_NAME:itbms-files}

# JWT Config
jwt:
  secret: mySecretKey123456789012345678901234567890hfeoiafhaoifhadhiwadhjwoifdhwafiajfaidjsadiosadjifwhwif
  access-token-expiration_ms: 1800000   # 30 minutes
  refresh-token-expiration_ms: 86400000 # 24 hours

# Email
email:
  verification_token_expiration_hr: 24

# Logging
logging:
  level:
    org.springframework.security: DEBUG
    com.example.auth: DEBUG


# Monitoring
# Actuator endpoints configuration
management:
  server:
    port: 8081
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
    prometheus:
      access: unrestricted